内部类：将一个类的定义放在另一个类的定义内部。它允许你把一些逻辑相关的类组织在一起，并控制位于内部的类的可视性。它了解外围类，并能与之通信，而且使用内部类代码更加优雅清晰。
如果想从外部类的非静态方法之外的任意位置创建某个内部类的对象，那么必须指明这个对象的类型：OuterClassName.InnerClassName。
优先使用类，而不是接口，如果你要使用接口，除非你了解他
为什么使用内部类？
	一般来说，内部类继承自某个类或实现某个接口，内部类的代码操作创建它的外围类的对象。所以可以认为内部类提供了某种进入其外围类的窗口。
如果只是需要一个接口的引用，为什么不通过外围类实现这个接口？
	如果这能满足要求，那么久应该这样做。外围类实现接口不是总能享用到接口带来的方便，有时需要用到接口的实现，所以使用内部类最吸引人的原因是：
每个内部类都能独立地继承自一个（接口的）实现，所以无论外围类是否已经继承了某个（接口的）实现，对于内部类都没有影响。
	内部类可以继承多个非接口类型（类或抽象类）。